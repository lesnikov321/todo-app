const btn = document.getElementById("btn")
const taskInput = document.getElementById("taskInput") // –ø–æ–ª–µ –≤–≤–æ–¥–∞
const taskList = document.getElementById("taskList")  // —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
const filterAll = document.getElementById("filterAll")
const filterActive = document.getElementById("filterActive")
const filterCompleted = document.getElementById("filterCompleted")

let inputedTask = ""


function renderTaskElement(element) {
  const el = document.createElement('li');
  const innerLi = document.createElement('span');
  const checkbox = document.createElement("input");
  const deleteBtn = document.createElement('button');
  
  deleteBtn.type = "submit";
  deleteBtn.textContent = "–£–¥–∞–ª–∏—Ç—å";
  checkbox.type = "checkbox";
  checkbox.checked = element.completed; // üí° –æ—Ç—Ä–∞–∂–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  innerLi.textContent = element.text;
  innerLi.style.marginRight = "40px";
  innerLi.style.textDecoration = element.completed ? "line-through" : "none";

  el.appendChild(innerLi);
  el.appendChild(deleteBtn);
  el.appendChild(checkbox);
  taskList.append(el);
}



filterAll.addEventListener("click", function(){
  const arr = JSON.parse(localStorage.getItem("tasks")) || [];
  taskList.replaceChildren();
  arr.forEach(renderTaskElement);
});

filterActive.addEventListener("click", function(){
  const arr = JSON.parse(localStorage.getItem("tasks")) || [];
  taskList.replaceChildren();
  arr.filter(t => !t.completed).forEach(renderTaskElement);
});

filterCompleted.addEventListener("click", function(){
  const arr = JSON.parse(localStorage.getItem("tasks")) || [];
  taskList.replaceChildren();
  arr.filter(t => t.completed).forEach(renderTaskElement);
});







function toggleCompleted(text, isCompleted, spanElement) {
  const arr = JSON.parse(localStorage.getItem("tasks")) || [];
  const task = arr.find(item => item.text === text);
  if (task) {
    task.completed = isCompleted;
    localStorage.setItem("tasks", JSON.stringify(arr));
    spanElement.style.textDecoration = isCompleted ? "line-through" : "none";
  }
}

btn.addEventListener("click", function(event){ //–∫–Ω–æ–ø–∫–∞ –ø–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é –∑–∞–¥–∞—á
    event.preventDefault()
    const trimmed = taskInput.value.trim() // —É–¥–∞–ª—è–µ—Ç –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
    
    if(trimmed.length == 0){
        throw new Error("–í–≤–µ–¥–∏—Ç–µ –∑–∞–¥–∞—á—É")
    } else {
      if (!JSON.parse(localStorage.getItem("tasks") || "[]").find(e => e.text === taskInput.value)) {
        const tasks = JSON.parse(localStorage.getItem("tasks")) || [];
        const newId = tasks.length+1; 
        const newTask = {
        id: newId,
        text: trimmed,
        completed: false
        };
        inputedTask = trimmed
// –¥–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–π input –≤ localStorage

        tasks.push(newTask);
        localStorage.setItem("tasks", JSON.stringify(tasks));
        JSON.parse(localStorage.getItem("tasks"))

        const el = document.createElement('li');
        const checkbox = document.createElement("input");
        const innerLi = document.createElement('span');
        const deleteBtn = document.createElement('button');
        deleteBtn.type = "submit";
        deleteBtn.textContent = "–£–¥–∞–ª–∏—Ç—å"
        innerLi.style.marginRight = "40px"

        checkbox.type = "checkbox";
        innerLi.textContent = trimmed

        el.appendChild(innerLi);
        el.appendChild(deleteBtn);
        el.appendChild(checkbox);
        taskList.append(el)
        taskInput.value = ""
      }
      else {
        console.log(JSON.parse(localStorage.getItem("tasks") || "[]").find(e => e.text === taskInput.value))
    }}
})

const data = localStorage.getItem('tasks');
// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ
if (data) {
  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ –º–∞—Å—Å–∏–≤
  const array = JSON.parse(data);
  array.forEach(element => {
    
  const el = document.createElement('li');
  const innerLi = document.createElement('span');
  const checkbox = document.createElement("input");
  const deleteBtn = document.createElement('button');
  deleteBtn.type = "submit";
  deleteBtn.textContent = "–£–¥–∞–ª–∏—Ç—å"

if (element.completed) {
  innerLi.style.textDecoration = "line-through";
} else {
  innerLi.style.textDecoration = "none";
}
  checkbox.type = "checkbox";
  innerLi.textContent = element.text
  innerLi.style.marginRight = "40px"
  
  el.appendChild(innerLi)
  el.appendChild(deleteBtn);
  el.appendChild(checkbox);

  taskList.append(el)
  });
} else {
  console.log('–î–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ localStorage');
}

taskList.addEventListener("click", function (e) {
  const li = e.target.closest("li"); // –Ω–∞—Ö–æ–¥–∏–º <li>, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫–ª–∏–∫
  const tasks = JSON.parse(localStorage.getItem("tasks")) || [];
  const span = li?.querySelector("span");
  const text = span?.textContent;

  // –ù–∞–π–¥—ë–º –∑–∞–¥–∞—á—É –ø–æ —Ç–µ–∫—Å—Ç—É
  const task = tasks.find(t => t.text === text);

  if (!task) return;

  // ‚úÖ –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ "–£–¥–∞–ª–∏—Ç—å"
  if (e.target.tagName === "BUTTON") {
    li.remove();
    const index = tasks.findIndex(t => t.text === text);
    tasks.splice(index, 1);
    localStorage.setItem("tasks", JSON.stringify(tasks));
  }

  // ‚úÖ –ö–ª–∏–∫ –ø–æ <span> ‚Äî —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (–ø–æ –æ–¥–Ω–æ–º—É –∫–ª–∏–∫—É)
  else if (e.target.tagName === "SPAN") {
    const input = document.createElement("input");
    input.value = task.text;
    input.type = "text";
    input.size = task.text.length + 2;
    li.replaceChild(input, span); // –∑–∞–º–µ–Ω–∏–ª–∏ span –Ω–∞ input

    // –ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–º—ë—Ç Enter ‚Äî —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç
    input.addEventListener("keydown", function (event) {
      if (event.key === "Enter") {
        const newText = input.value.trim();

        if (newText.length === 0) return;

        task.text = newText;
        localStorage.setItem("tasks", JSON.stringify(tasks));

        span.textContent = newText;
        li.replaceChild(span, input); // –≤–µ—Ä–Ω—É–ª–∏ span –æ–±—Ä–∞—Ç–Ω–æ
      }
    });

    // –ò–ª–∏ –∫–æ–≥–¥–∞ input —Ç–µ—Ä—è–µ—Ç —Ñ–æ–∫—É—Å ‚Äî —Ç–æ–∂–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å
    input.addEventListener("blur", function () {
      span.textContent = input.value.trim() || task.text;
      task.text = span.textContent;
      localStorage.setItem("tasks", JSON.stringify(tasks));
      li.replaceChild(span, input);
    });

    input.focus(); // —Å—Ä–∞–∑—É —Ñ–æ–∫—É—Å –Ω–∞ input
  }
});







taskList.addEventListener("change", function (e) {
 if (e.target.matches('input[type="checkbox"]')) {
  const li = e.target.closest("li");
  const textSpan = li.querySelector("span").textContent;
  toggleCompleted(textSpan, e.target.checked, li.querySelector("span"));
}});










function renderTasks(filter = "all") {
  // 1. –ü–æ–ª—É—á–∏—Ç—å –º–∞—Å—Å–∏–≤ –∑–∞–¥–∞—á –∏–∑ localStorage
  const tasks = JSON.parse(localStorage.getItem("tasks")) || [];

  // 2. –û—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
  taskList.replaceChildren();

  // 3. –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ filter
  let filteredTasks;
if (filter === "all") {
  filteredTasks = tasks;
} else if (filter === "completed") {
  filteredTasks = tasks.filter(task => task.completed === true);
} else if (filter === "active") {
  filteredTasks = tasks.filter(task => task.completed === false);
}


  // 4. –î–ª—è –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–∏ –∏–∑ filteredTasks —Å–æ–∑–¥–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ –∏ –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
  filteredTasks.forEach(element => {
    const el = document.createElement('li');
    const innerLi = document.createElement('span');
    const checkbox = document.createElement("input");
    const deleteBtn = document.createElement('button');
    
    deleteBtn.type = "submit";
    deleteBtn.textContent = "–£–¥–∞–ª–∏—Ç—å";
    checkbox.type = "checkbox";
    checkbox.checked = element.completed; // üí° –æ—Ç—Ä–∞–∂–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    innerLi.textContent = element.text;
    innerLi.style.marginRight = "40px";
    innerLi.style.textDecoration = element.completed ? "line-through" : "none";

    el.appendChild(innerLi);
    el.appendChild(deleteBtn);
    el.appendChild(checkbox);
    taskList.append(el);
  });
}


taskList.addEventListener("dblclick", function (e) {
  if (e.target.tagName === "SPAN") {
    const span = e.target;
    const oldText = span.textContent;

    const input = document.createElement("input");
    input.type = "text";
    input.value = oldText;
    input.style.marginRight = "40px";
    input.style.width = "60%";

    span.replaceWith(input);
    input.focus();

    // –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    function saveEdit() {
      const newText = input.value.trim();
      if (newText === "") {
        input.replaceWith(span); // –û—Ç–º–µ–Ω–∞, –µ—Å–ª–∏ –ø—É—Å—Ç–æ
        return;
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º localStorage
      const tasks = JSON.parse(localStorage.getItem("tasks")) || [];
      const task = tasks.find(t => t.text === oldText);
      if (task) {
        task.text = newText;
        localStorage.setItem("tasks", JSON.stringify(tasks));
        renderTasks(); // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∞
      }
    }

    input.addEventListener("blur", saveEdit); // –ü–æ—Ç–µ—Ä—è —Ñ–æ–∫—É—Å–∞
    input.addEventListener("keydown", function (e) {
      if (e.key === "Enter") saveEdit();
    });
  }
});







